@startuml leanmu

footer Mu by Olivier Refalo
scale max 1024 width

skinparam nodesep 10
skinparam ranksep 10

' Kubernetes
!define KubernetesPuml https://raw.githubusercontent.com/dcasati/kubernetes-PlantUML/master/dist
!includeurl KubernetesPuml/kubernetes_Common.puml
!includeurl KubernetesPuml/kubernetes_C4.puml
!includeurl KubernetesPuml/kubernetes_Context.puml
!includeurl KubernetesPuml/kubernetes_Simplified.puml

!includeurl KubernetesPuml/OSS/KubernetesSvc.puml
!includeurl KubernetesPuml/OSS/KubernetesIng.puml
!includeurl KubernetesPuml/OSS/KubernetesPod.puml
!includeurl KubernetesPuml/OSS/KubernetesDeploy.puml
!includeurl KubernetesPuml/OSS/KubernetesApi.puml


!define AzurePuml https://raw.githubusercontent.com/RicardoNiepel/Azure-PlantUML/release/2-1/dist
!includeurl AzurePuml/AzureCommon.puml
!includeurl AzurePuml/AzureSimplified.puml

!includeurl AzurePuml/Containers/AzureContainerRegistry.puml

collections "Client Apps" as clientapps
collections "Helm Charts" as helmchart
actor "DevOps" as devopsactor

'top to bottom direction
Left to right direction

AzureContainerRegistry(dockerregistry, "Docker Registry", " ")

' Kubernetes Components
Cluster_Boundary(cluster, "Kubernetes Cluster") {
 
    KubernetesIng(ingress, "fn.mu.local", "")
    KubernetesApi(kubernetesapi, "Kubernetes API", "")

    Namespace_Boundary(mgmtns, "mu-mgmt") {
        KubernetesSvc(apisvc, "mu-api", "")
        KubernetesPod(apipod, "mu-api", "")
        KubernetesPod(mysqlpod, "mysql", "")

        ' KubernetesDeploy(apideploy,"mu-api","")
        ' KubernetesDeploy(mysqldeploy,"mu-mysql","")

        Rel(apisvc,apipod, "80")

        Rel(apipod,mysqlpod,"3306")

        ' Rel(apideploy,apipod, "replica=1")
        ' Rel(mysqldeploy,mysqlpod, "replica=1")
    }

    Namespace_Boundary(opsns, "mu-ops") {

        KubernetesSvc(uisvc, "mu-ui", "")
        KubernetesSvc(grafanasvc, "mu-grafana", "")
        KubernetesSvc(prometheussvc, "mu-prometheus-server", "")
        KubernetesSvc(lokisvc, "mu-loki", "")
        KubernetesSvc(lokihlsvc, "mu-loki-headless", "")

        KubernetesPod(uipod, "mu-ui", "")
        KubernetesPod(grafanapod, "mu-grafana", "")
        KubernetesPod(lokipod, "mu-loki", "")
        KubernetesPod(vectorpod, "mu-vector", "")
        KubernetesPod(prometheuspod, "mu-prometheus", "")

        ' KubernetesDeploy(uideploy,"mu-ui","")
        ' KubernetesDeploy(grafanadeploy,"mu-grafana","")
        ' KubernetesDeploy(prometheusdeploy,"mu-prometheus-server","")

        Rel(uisvc, uipod, "4000")
        Rel(grafanasvc, grafanapod, "80")
        Rel(prometheussvc, prometheuspod, " ")
        Rel(lokisvc,lokihlsvc,"listens")
        Rel(lokisvc,lokipod," ")
        
        Rel(grafanapod,prometheussvc," ")
        Rel(vectorpod,lokisvc," ")
        Rel(grafanapod,lokisvc," ")
        Rel(vectorpod, kubernetesapi, "listens")

        ' Rel(grafanadeploy, grafanapod," ")
        ' Rel(uideploy,uipod, "replica=1") 
        ' Rel(prometheusdeploy, prometheuspod," ")
        ' Rel(prometheusdeploy, lokipod," ")

    }

    Namespace_Boundary(nsFn, "mu-fn") {
        KubernetesSvc(lbsvc, "mu-lb", "")
        KubernetesSvc(runnersvc, "mu-runner-headless", "")
        KubernetesSvc(asyncsvc, "mu-async", "")
        KubernetesSvc(stepsvc, "mu-step", "")
        KubernetesSvc(natssvc, "mu-nats", "")

        KubernetesPod(lbpod, "mu-lb", "")
        KubernetesPod(runnerpod, "mu-runner", "")
        KubernetesPod(asyncpod, "mu-async", "")
        KubernetesPod(steppod, "mu-step", "")
        KubernetesPod(natspod, "mu-nats", "")
        KubernetesPod(natsprocessorpod, "mu-nats-processor", "")
        
        ' KubernetesDeploy(lbdeploy,"mu-lb","")
        ' KubernetesDeploy(runnerdeploy,"mu-runner","")
        ' KubernetesDeploy(asyncdeploy,"mu-async","")
        ' KubernetesDeploy(stepdeploy,"mu-step","")
        ' KubernetesDeploy(natsdeploy,"mu-nats","")

        ' Rel(lbdeploy,lbpod, "replica=1")
        ' Rel(runnerdeploy,runnerpod, "replica=1")
        ' Rel(asyncdeploy,asyncpod, "replica=1")
        ' Rel(stepdeploy,steppod, "replica=1")
        ' Rel(natsdeploy,natspod, "replica=1")

        Rel(lbsvc, lbpod, "90")
        Rel(asyncsvc, asyncpod, "80")
        Rel(stepsvc, steppod, "80")
        Rel(natssvc, natspod, "6222")

        Rel(lbpod, runnerpod, "FN_GRPC_PORT:9191")
        Rel(lbpod, runnersvc, "FN_RUNNER_K8S_HEADLESS_SERVICE")
        Rel(lbpod, apisvc, "FN_RUNNER_API_URL")
        Rel_R(natsprocessorpod, natssvc, "listens")
        Rel(natsprocessorpod, stepsvc, " ")
        Rel(natsprocessorpod, lbsvc, " ")

        Rel(asyncpod, natssvc, " ")

    }

Rel_L(uipod, apisvc, "FN_API_URL")


Rel(devopsactor,ingress," ")
Rel_R(devopsactor,kubernetesapi," ")
Rel(ingress,lbsvc,"/")
Rel(ingress,apisvc,"/api")
Rel_L(ingress,stepsvc,"/step")
Rel(ingress,asyncsvc,"/async")
Rel(ingress,uisvc,"/ui")
Rel(ingress,grafanasvc,"/grafana")
Rel(prometheuspod,kubernetesapi," ")

}

Rel(runnerpod,dockerregistry, " ")
Rel_L(clientapps,ingress," ")
Rel(devopsactor,helmchart," ")
Rel(helmchart,kubernetesapi," ")

@enduml