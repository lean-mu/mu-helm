apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}-runner
  labels:
    app: {{ template "fullname" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  namespace: {{ .Release.Namespace | quote }}
spec:
  replicas: {{ .Values.fn_runner.replicas }}
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
  template:
    metadata:
       labels:
         app: {{ template "fullname" . }}
         chart: {{ .Chart.Name }}-{{ .Chart.Version }}
         heritage: {{ .Release.Service }}
         release: {{ .Release.Name }}
         role: runner
       annotations:
         prometheus.io/scrape: 'true'
         prometheus.io/port: {{ .Values.fn_runner.service.port | quote }}
         prometheus.io/path: '/metrics'
    spec:
      {{- if .Values.fn_runner.nodeSelector }}
      nodeSelector:
      {{ toYaml .Values.fn_runner.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.fn_runner.tolerations }}
      tolerations:
      {{ toYaml .Values.fn_runner.tolerations | indent 8 }}
      {{- end }}
      containers:
        - name: runner
          image: {{ .Values.fn_runner.image }}:{{ .Values.fn_runner.tag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          resources:
{{ toYaml .Values.fn_runner.resources | indent 12 }}
          securityContext:
            privileged: true
          ports:
          - containerPort: {{ .Values.fn_runner.service.grpc_port }}
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.fn_runner.service.port }}
            initialDelaySeconds: 5
            periodSeconds: 10
          env:
          - name: FN_LOG_LEVEL
            value: {{ .Values.logLevel.fn | quote }}
          - name: FN_NODE_TYPE
            value: "pure-runner"
        {{- if eq .Values.logLevel.fn "debug" }}
          - name: GIN_MODE
            value: "debug"
        {{- end }}
          - name: FN_PORT
            value: {{ .Values.fn_runner.service.port | quote }}
          - name: FN_GRPC_PORT
            value: {{ .Values.fn_runner.service.grpc_port | quote }}
        {{- if .Values.fn_docker_auth.enabled }}
          - name: FN_DOCKER_AUTH
            value: {{ .Values.fn_docker_auth.registries | quote }}
        {{- end }}
          {{- range $key, $value := .Values.fn_runner.env }}
            {{- if $value }}
          - name: {{ $key }}
            value: {{ $value | quote }}
            {{- end }}
          {{- end }}
